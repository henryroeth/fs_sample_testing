read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Read every nth row of all columns
slice(Time, seq(1, nrow(df), 5))
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Read every nth row of all columns
slice(Time, seq(1, nrow(df), 5))
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = as.numeric(data.frame(read_csv$Time))
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = as.integer(data.frame(read_csv$Time))
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.matrix(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.matrix(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.matrix(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Wind_Direction),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
print(residuals(fit4))
print(deviance(fit4))
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Wind_Direction),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
print(residuals(fit4))
print(deviance(fit4))
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Wind),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
print(residuals(fit4))
print(deviance(fit4))
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
#install.packages("dplyr")
library(dplyr)
# Reads CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Wind),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#Regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
#Prints regression equations
print(fit1)
print(fit2)
print(fit3)
print(fit4)
print(fit5)
#Plots regression lines
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#install.packages("dplyr")
library(dplyr)
# Reads a specified CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
read_csv1 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-01'02.CSV")
read_csv2 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Wind),
y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#Regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
#Prints regression equations
print(fit1)
print(fit2)
print(fit3)
print(fit4)
print(fit5)
#Plots regression lines
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
#install.packages("dplyr")
library(dplyr)
# Reads a specified CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
read_csv1 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-01'02.CSV")
read_csv2 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = read_csv$Time
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.frame(Time), y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#install.packages("dplyr")
library(dplyr)
# Reads a specified CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
read_csv1 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-01'02.CSV")
read_csv2 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
#variable names Where column data is stored
Pm2.5 = read_csv$Pm2.5.ug.m3.
Time = data.frame(read_csv$Time)
Wind = read_csv$Wind.mph.
Wind_Direction = read_csv$Wind.Direction...
#Find the mean of the specified column
print(result <- mean(col_name))
#Find the standard deviation the specified column
print(result <- sd(col_name))
#Find the median the specified column
print(result <- median(col_name))
#data set
df <- data.frame(x=data.matrix(Time), y=data.matrix(Pm2.5))
#Plots the data into a visual display by converting file data into a matrix
plot(df, xlab = 'Wind(mph)', ylab = 'Pm2.5(ug/m3)', main = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30')
#Regression lines
fit1 <- lm(y~x, data=df)
# dependencies
# reads a specified CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
read_csv1 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-01'02.CSV")
read_csv2 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
# variable names Where column data is stored
file = read_csv
pm2.5 = file$Pm2.5.ug.m3.
time = data.frame(file$Time)
wind = file$Wind.mph.
wind_direction = file$Wind.Direction...
# graph labels
title = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30'
xlabel = 'Wind(mph)'
ylabel = 'Pm2.5(ug/m3)'
#prints a statistical rundown of the data to the console
print(result <- mean(col_name)) # mean
print(result <- sd(col_name)) #standard deviation
print(result <- median(col_name)) #median
# stores csv file data into a frame
df <- data.frame(x=data.matrix(wind), y=data.matrix(pm2.5))
# plots the data into a visual display by converting file data into a matrix
plot(df, xlab = xlabel, ylab = ylabel, main = title)
# regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
# prints regression equations
print(fit1)
print(fit2)
print(fit3)
print(fit4)
print(fit5)
# plots regression lines
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
# dependencies
# reads a specified CSV file
read_csv = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\combined.CSV")
read_csv1 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-01'02.CSV")
read_csv2 = read.csv("C:\\Users\\henry\\fs_sample_testing\\data_records\\2023-07-02'03.CSV")
# variable names where column data is stored
file = read_csv
pm2.5 = file$Pm2.5.ug.m3.
time = data.frame(file$Time)
wind = file$Wind.mph.
wind_direction = file$Wind.Direction...
# graph labels
title = 'Wind & Pm2.5 Sinusoidal Regression Curves 2023-06-(10am)29to(10am)30'
xlabel = 'Wind(mph)'
ylabel = 'Pm2.5(ug/m3)'
#prints a statistical rundown of the data to the console
print(result <- mean(col_name)) # mean
print(result <- sd(col_name)) #standard deviation
print(result <- median(col_name)) #median
# stores csv file data into a frame
df <- data.frame(x=data.matrix(wind), y=data.matrix(pm2.5))
# plots the data into a visual display by converting file data into a matrix
plot(df, xlab = xlabel, ylab = ylabel, main = title)
# regression lines
fit1 <- lm(y~x, data=df)
fit2 <- lm(y~poly(x,2,raw=TRUE), data=df)
fit3 <- lm(y~poly(x,3,raw=TRUE), data=df)
fit4 <- lm(y~poly(x,4,raw=TRUE), data=df)
fit5 <- lm(y~poly(x,5,raw=TRUE), data=df)
# prints regression equations
print(fit1)
print(fit2)
print(fit3)
print(fit4)
print(fit5)
# plots regression lines
x_axis <- seq(0, 9, length=2000)
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
